{
  "name": "Auto-Invoice Processor (1WF)",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/files",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "purpose",
              "value": "ocr"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "=File_invoice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1168,
        -128
      ],
      "id": "NODE_01",
      "name": "Upload to Mistral",
      "credentials": {
        "httpHeaderAuth": {
          "id": "REDACTED",
          "name": "REDACTED"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.mistral.ai/v1/files/{{ $json.id }}/url",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "expiry",
              "value": "24"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -944,
        -128
      ],
      "id": "NODE_02",
      "name": "Get Signed URL",
      "credentials": {
        "httpHeaderAuth": {
          "id": "REDACTED",
          "name": "REDACTED"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/ocr",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"mistral-ocr-latest\",\n  \"document\": {\n    \"type\": \"document_url\",\n    \"document_url\": \"{{ $json.url }}\"\n  },\n  \"include_image_base64\": true\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -720,
        -128
      ],
      "id": "NODE_03",
      "name": "Get OCR Results",
      "credentials": {
        "httpHeaderAuth": {
          "id": "REDACTED",
          "name": "REDACTED"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.pages[0].markdown }}",
        "attributes": {
          "attributes": [
            {
              "name": "invoice_id",
              "description": "Number or ID of the invoice.",
              "required": true
            },
            {
              "name": "Company_name",
              "description": "Name of the company that issued the invoice"
            },
            {
              "name": "issue_date",
              "type": "date",
              "description": "Issue date of the invoice"
            },
            {
              "name": "due_date",
              "type": "date",
              "description": "The due date of the invoice"
            },
            {
              "name": "status",
              "description": "Status of the invoice"
            },
            {
              "name": "total_amount",
              "type": "number",
              "description": "The total Amount of the invoice"
            },
            {
              "name": "tax_amount ",
              "description": "The Tax amount of the invoice"
            },
            {
              "name": "Product_Name",
              "description": "The name of the product or service"
            },
            {
              "name": "Product_Name2",
              "description": "The name of the second product or service"
            },
            {
              "name": "Product_Name3",
              "description": "The name of the third product or service"
            },
            {
              "name": "Product_Name4",
              "description": "The name of the fourth product or service"
            },
            {
              "name": "Product_Name5",
              "description": "The name of the fifth product or service"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -496,
        -128
      ],
      "id": "NODE_04",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -496,
        96
      ],
      "id": "NODE_05",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "REDACTED",
          "name": "REDACTED"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "REDACTED_DOCUMENT_ID",
          "mode": "list",
          "cachedResultName": "Invoices",
          "cachedResultUrl": "REDACTED_URL"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Blad1",
          "cachedResultUrl": "REDACTED_URL"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Company_name": "={{ $json.output.Company_name }}",
            "invoice_id": "={{ $json.output.invoice_id }}",
            "issue_date": "={{ $json.output.issue_date }}",
            "due_date": "={{ $json.output.due_date }}",
            "status": "={{ $json.output.status }}",
            "total_amount": "={{ $json.output.total_amount }}",
            "tax_amount ": "={{ $json.output['tax_amount '] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "invoice_id",
              "displayName": "invoice_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "issue_date",
              "displayName": "issue_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "due_date",
              "displayName": "due_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "total_amount",
              "displayName": "total_amount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tax_amount ",
              "displayName": "tax_amount ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Company_name",
              "displayName": "Company_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Kolom 8",
              "displayName": "Kolom 8",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Kolom 9",
              "displayName": "Kolom 9",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Kolom 10",
              "displayName": "Kolom 10",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -64,
        -128
      ],
      "id": "NODE_06",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "REDACTED",
          "name": "REDACTED"
        }
      }
    },
    {
      "parameters": {
        "content": "Mistral AI OCR - AI will scan docs and images\n",
        "height": 208,
        "width": 640
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1216,
        -176
      ],
      "typeVersion": 1,
      "id": "NODE_07",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "jsCode": "// Function node (not Function Item)\nconst item = items[0];\nconst bin = item.binary || {};\n// Adjust the prefix to your field's sanitized name:\nconst keys = Object.keys(bin).filter(k => k.startsWith('File_invoice'));\nreturn keys.map(k => ({\n  json: item.json,            // carry over your form fields\n  binary: { File_invoice: bin[k] }    // normalize to \"file\"\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1664,
        -224
      ],
      "id": "NODE_08",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1392,
        -224
      ],
      "id": "NODE_09",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1168,
        -528
      ],
      "id": "NODE_10",
      "name": "Wait",
      "webhookId": "REDACTED"
    },
    {
      "parameters": {
        "formTitle": "INvoice processing",
        "formFields": {
          "values": [
            {
              "fieldLabel": "File invoice",
              "fieldType": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -1952,
        -224
      ],
      "id": "NODE_11",
      "name": "Upload Files",
      "webhookId": "REDACTED"
    },
    {
      "parameters": {
        "content": "OpenAI will interpret data and format it",
        "height": 208,
        "width": 352
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -560,
        -192
      ],
      "typeVersion": 1,
      "id": "NODE_12",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "Form to submit docs/images\n\nCan be changed to Whatsapp too",
        "height": 304,
        "width": 304
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2048,
        -336
      ],
      "typeVersion": 1,
      "id": "NODE_13",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "Invoice Data filled into sheets automatically",
        "height": 208,
        "width": 304
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        -192
      ],
      "typeVersion": 1,
      "id": "NODE_14",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {},
  "connections": {
    "Upload to Mistral": {
      "main": [
        [
          {
            "node": "Get Signed URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Signed URL": {
      "main": [
        [
          {
            "node": "Get OCR Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get OCR Results": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Upload to Mistral",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Files": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "REDACTED_VERSION_ID",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "REDACTED"
  },
  "id": "REDACTED_WORKFLOW_ID",
  "tags": []
}